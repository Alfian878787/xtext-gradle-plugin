buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'org.xtext:xtext-gradle-plugin:1.0.14'
    classpath 'com.github.oehme.sobula:sobula:0.6.6'
    classpath 'com.netflix.nebula:nebula-project-plugin:3.3.0'
  }
}

ext.xtextVersion = '2.11.0.beta2'
apply from: "${rootDir}/gradle/bootstrap-setup.gradle"

allprojects {
  apply plugin: 'com.github.oehme.sobula.plugin-release'

  group = "org.xtext"
  bintray.pkg.name = "$rootProject.group:$rootProject.name"

  contacts {
    "xtext.team@gmail.com" {
      moniker "The Xtext team"
      roles "owner"
      github "xtext"
    }
  }

  bintray.user = "xtext-team"
  bintray.pkg.version.mavenCentralSync.user = "xtext.team"

  repositories {
    jcenter()
  }
}

subprojects {
  apply plugin: 'eclipse'
  apply plugin: 'java'

  sourceCompatibility = 1.7

  tasks.withType(JavaCompile) {
      options.encoding = 'UTF-8'
  }

  dependencies {
    compile gradleApi()
    compile 'com.google.guava:guava:18.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.ow2.asm:asm:5.0.1'
  }
}

configure(subprojects.findAll{p-> !p.name.contains('protocol')}) {
  apply plugin: 'org.xtext.xtend'
  generateXtext.xtextClasspath = rootProject.configurations.getByName('xtendCompiler')

  dependencies {
    compile "org.eclipse.xtend:org.eclipse.xtend.lib:${xtextVersion}"
  }
}

configure(subprojects.findAll{p-> p.name.contains('plugin')}){
  apply plugin: 'java-gradle-plugin'
  apply plugin: 'nebula.facet'

  jar {
    manifest {
      attributes("Implementation-Version": project.version)
    }
  }

  facets {
    integTest {
      parentSourceSet = 'test'
      testTaskName = 'integrationTest'
    }
  }
  dependencies {
    integTestCompile gradleTestKit()
  }

  integrationTest {
    dependsOn("install")
    systemProperty 'gradle.project.version', version
  }
}
